/* Exact CSS from prototype.html */
:root {
  --primary: rgba(149, 76, 233, 0.85);
  --primary-dark: rgba(186, 104, 255, 0.9);
  --scrollbar-width: 8px;
  --container-border-radius: 15px;
}

html {
  scroll-behavior: smooth;
}

body {
  font-family: 'Poppins', sans-serif;
  transition: background-color 0.3s, color 0.3s;
  overflow-x: hidden;
  cursor: default;
}

/* Hide default cursor globally */
:root, html, body, #__next, main, * {
  cursor: none !important;
}

/* Custom Scrollbar */
::-webkit-scrollbar {
  width: var(--scrollbar-width);
}

::-webkit-scrollbar-track {
  background: transparent;
}

::-webkit-scrollbar-thumb {
  background: var(--primary);
  border-radius: 4px;
}

.dark ::-webkit-scrollbar-thumb {
  background: var(--primary-dark);
}

/* Custom animated scrollbar */
.scrollbar-indicator {
  position: fixed;
  top: 0;
  right: 0;
  width: var(--scrollbar-width);
  height: 0;
  background: var(--primary);
  z-index: 1000;
  border-radius: 4px;
  box-shadow: 0 0 10px rgba(149, 76, 233, 0.5);
  transition: height 0.1s;
}

.dark .scrollbar-indicator {
  background: var(--primary-dark);
  box-shadow: 0 0 10px rgba(186, 104, 255, 0.5);
}

/* Parallax elements */
.parallax-element {
  transition: transform 0.2s ease-out;
}

/* Button and interactive elements */
.interactive {
  transition: transform 0.3s, box-shadow 0.3s;
  position: relative;
  overflow: hidden;
}

.interactive:hover {
  transform: translateY(-3px) translateX(1px);
}

/* Custom cursor */
.custom-cursor {
  position: fixed;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background-color: rgba(149, 76, 233, 0.3);
  pointer-events: none;
  z-index: 9999;
  transform: translate(-50%, -50%);
  transition: width 0.3s, height 0.3s, background-color 0.3s;
  mix-blend-mode: difference;
}

.custom-cursor.expanded {
  width: 50px;
  height: 50px;
  background-color: rgba(149, 76, 233, 0.15);
}

/* Hero section with 3D effect */
.hero-content {
  position: relative;
  z-index: 1;
}

.hero-background {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

/* Sticky nav animation */
.nav-container {
  transition: padding 0.3s, background-color 0.3s, box-shadow 0.3s;
}

.nav-container.sticky {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: 100;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  background-color: rgba(255, 255, 255, 0.9);
  -webkit-backdrop-filter: blur(10px);
  backdrop-filter: blur(10px);
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}

.dark .nav-container.sticky {
  background-color: rgba(30, 30, 30, 0.9);
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
}

/* Section transitions */
.section {
  opacity: 0;
  transform: translateY(30px);
  transition: opacity 0.8s, transform 0.8s;
}

.section.visible {
  opacity: 1;
  transform: translateY(0);
}

/* Form styles */
.form-input {
  transition: border-color 0.3s, box-shadow 0.3s;
}

.form-input:focus {
  border-color: var(--primary);
  box-shadow: 0 0 0 3px rgba(149, 76, 233, 0.2);
}

/* Toast notification */
.toast {
  position: fixed;
  bottom: 20px;
  right: 20px;
  padding: 1rem 1.5rem;
  background-color: #4ade80;
  color: white;
  border-radius: 8px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  transform: translateY(100px);
  opacity: 0;
  transition: transform 0.3s, opacity 0.3s;
  z-index: 1000;
}

.toast.show {
  transform: translateY(0);
  opacity: 1;
}

.toast.error {
  background-color: #f87171;
}

/* Loading spinner */
.spinner {
  width: 20px;
  height: 20px;
  border: 2px solid rgba(255, 255, 255, 0.3);
  border-radius: 50%;
  border-top-color: white;
  animation: spin 1s ease-in-out infinite;
  margin-left: 0.5rem;
  display: none;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

/* Canvas for 3D background */
canvas.background-canvas {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
  opacity: 0.2;
}

/* Logo animation */
.logo {
  position: relative;
  overflow: hidden;
}

.logo::after {
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  width: 30%;
  height: 100%;
  background: linear-gradient(to right, rgba(255, 255, 255, 0), rgba(149, 76, 233, 0.3), rgba(255, 255, 255, 0));
  transform: skewX(-20deg);
  animation: shine 3s infinite;
}

@keyframes shine {
  0% {
    transform: translateX(-100%) skewX(-20deg);
  }
  100% {
    transform: translateX(200%) skewX(-20deg);
  }
}

/* Language toggle styles */
.language-toggle {
  transition: padding 0.3s, background-color 0.3s, box-shadow 0.3s;
}

.language-toggle button {
  min-width: 40px;
  text-align: center;
}

/* RTL support for Arabic */
.rtl {
  direction: rtl;
  text-align: right;
}

/* Animation for language switch */
.language-fade {
  animation: languageFade 0.5s ease;
}

@keyframes languageFade {
  0% {
    opacity: 0.5;
    transform: translateY(5px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Add new styles for core skills */
.core-skill,
.core-skill.rounded,
.core-skill.rounded-full,
.core-skill.rounded-lg,
.core-skill.rounded-xl,
.core-skill.rounded-md,
.core-skill.rounded-sm {
  border: 2px solid transparent;
  transition: box-shadow 0.3s, background-color 0.3s;
  position: relative;
  overflow: hidden;
  border-radius: 15px !important;
  z-index: 1;
}

.core-skill:hover {
  background-color: rgba(38, 41, 199, 0.1);
  box-shadow: 
    0 0 8px rgba(38, 41, 199, 0.5),
    0 0 15px rgba(199, 87, 190, 0.3),
    0 0 20px rgba(234, 83, 237, 0.2);
  border-color: transparent;
  border-radius: 15px;
  border: 2px solid transparent;
  position: relative;
}

.core-skill:hover::before {
  border-radius: inherit;
}

.dark .core-skill:hover {
  background-color: rgba(38, 41, 199, 0.1);
  box-shadow: 
    0 0 8px rgba(38, 41, 199, 0.5),
    0 0 15px rgba(199, 87, 190, 0.3),
    0 0 20px rgba(234, 83, 237, 0.2);
  border: 2px solid transparent;
  border-radius: inherit;
}

/* Add new keyframes animation for gradient shift */
@keyframes gradientShift {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

/* Ensure masks work properly across browsers */
@supports not (mask-composite: exclude) {
  .card:hover::before,
  .core-skill:hover::before {
    -webkit-mask-composite: xor;
    mask-composite: exclude;
  }
}